{"version":3,"sources":["js/refs.js","js/timerClass.js","index.js"],"names":["day","document","querySelector","hour","min","sec","textTimer","refs","CountdownTimer","constructor","selector","endDate","intervalId","start","setInterval","nowDate","Date","getTime","distance","stop","time","getTimeComponents","updateClockface","clearInterval","textContent","days","pad","Math","floor","hours","mins","secs","value","String","padStart","timer"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,IAAKC,SAASC,cAAc,uBAC5BC,KAAMF,SAASC,cAAc,wBAC7BE,IAAKH,SAASC,cAAc,uBAC5BG,IAAKJ,SAASC,cAAc,uBAC5BI,UAAWL,SAASC,cAAc,OALrB,QAAA,QAAA;;ACqDf,aArDA,IAAA,EAAA,EAAA,QAAA,cAqDA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAnDA,MAAM,IAAEF,EAAF,KAAOG,EAAP,IAAaC,EAAb,IAAkBC,EAAlB,UAAuBC,GAAcC,EAA3C,QAEA,MAAMC,EACJC,aAAY,SAAEC,EAAF,QAAYC,IACjBC,KAAAA,WAAa,KACbF,KAAAA,SAAWA,EACXC,KAAAA,QAAUA,EAEVE,KAAAA,QAGPA,QACOD,KAAAA,WAAaE,YAAY,KACxBC,IAAAA,GAAU,IAAIC,MAAOC,UACrBC,EAAW,KAAKP,QAAQM,UAAYF,EAEpCG,GAAAA,GAAY,EACTC,KAAAA,WACA,CACCC,MAAAA,EAAO,KAAKC,kBAAkBH,GAC/BI,KAAAA,gBAAgBF,KAEtB,KAGLD,OACEI,cAAc,KAAKX,YACnBN,EAAUkB,YAAe,WAG3BH,kBAAkBD,GAMT,MAAA,CAAEK,KALI,KAAKC,IAAIC,KAAKC,MAAMR,EAAQ,QAK1BS,MAJD,KAAKH,IAAIC,KAAKC,MAAOR,EAAQ,MAAyB,OAI9CU,KAHT,KAAKJ,IAAIC,KAAKC,MAAOR,EAAQ,KAAoB,MAGlCW,KAFf,KAAKL,IAAIC,KAAKC,MAAOR,EAAQ,IAAc,OAK1DM,IAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCZ,iBAAgB,KAAEG,EAAF,MAAQI,EAAR,KAAeC,EAAf,KAAqBC,IACnC/B,EAAIwB,eAAiBC,IACrBtB,EAAKqB,eAAiBK,IACtBzB,EAAIoB,eAAiBM,IACrBzB,EAAImB,eAAiBO,KAIzB,MAAMI,EAAQ,IAAI3B,EAAe,CAC/BE,SAAU,WACVC,QAAS,IAAIK,KAAK;;ACtDpB,aADA,QAAA,oBACA,QAAA","file":"src.b65f1bae.js","sourceRoot":"../src","sourcesContent":["export default {\n  day: document.querySelector('[data-value=\"days\"]'),\n  hour: document.querySelector('[data-value=\"hours\"]'),\n  min: document.querySelector('[data-value=\"mins\"]'),\n  sec: document.querySelector('[data-value=\"secs\"]'),\n  textTimer: document.querySelector('h2'),\n};\n","import refs from './refs.js';\n\nconst { day, hour, min, sec, textTimer } = refs;\n\nclass CountdownTimer {\n  constructor({ selector, endDate }) {\n    this.intervalId = null;\n    this.selector = selector;\n    this.endDate = endDate;\n\n    this.start();\n  }\n\n  start() {\n    this.intervalId = setInterval(() => {\n      let nowDate = new Date().getTime();\n      let distance = this.endDate.getTime() - nowDate;\n\n      if (distance <= 0) {\n        this.stop();\n      } else {\n        const time = this.getTimeComponents(distance);\n        this.updateClockface(time);\n      }\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n    textTimer.textContent = `${'истекший'}`;\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  updateClockface({ days, hours, mins, secs }) {\n    day.textContent = `${days}`;\n    hour.textContent = `${hours}`;\n    min.textContent = `${mins}`;\n    sec.textContent = `${secs}`;\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  endDate: new Date('Oct 6, 2021 19:30:00'),\n});\n","import './sass/main.scss';\nimport './js/timerClass.js';\n"]}